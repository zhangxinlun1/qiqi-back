version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: ./meetting_room_booking_system_backend
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USERNAME=root
      - DB_PASSWORD=woaini520.
      - DB_DATABASE=meeting_room_booking_system
      - PORT=3333
      - NODE_ENV=production
      - CORS_ORIGIN=http://localhost:5173
    depends_on:
      - mysql
    networks:
      - app-network
    restart: unless-stopped

  # 前端服务
  frontend:
    build:
      context: ./vue3-admin-dashboard
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=woaini520.
      - MYSQL_DATABASE=meeting_room_booking_system
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Redis 缓存
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

# 网络配置
networks:
  app-network:
    driver: bridge

# 数据卷（持久化数据）
volumes:
  mysql-data:
    driver: local
  redis-data:
    driver: local 